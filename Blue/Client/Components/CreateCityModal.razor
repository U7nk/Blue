@using Blue.Shared
@using Blue.Client.Services
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@inject ICityService CityService

@if (City is null)
{
    <div>city is null</div>
    return;
}

<CityForm City="City" OnSubmit="CreateCity" OnCancel="ModalInstance.CloseAsync" />

@code {

    [CascadingParameter]
    private BlazoredModalInstance ModalInstance { get; set; }

    [Parameter]
    public CityViewModel City { get; set; }
    
    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        City = new CityViewModel();
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri(HubConst.CityJournal.Path))
            .Build();
        await hubConnection.StartAsync();
    }
    
    private async Task CreateCity()
    {
        City = await CityService.CreateCity(City);
        await ModalInstance.CloseAsync(ModalResult.Ok(City));
        await hubConnection.SendAsync(HubConst.CityJournal.AddCityAction, City);
    }

}